from aiogram import Bot, Dispatcher, executor, types
from dotenv import load_dotenv
import logging
import os

load_dotenv()
API_TOKEN = os.getenv("API_TOKEN")
CHANNEL_USERNAME = '@poryadindom'
BONUS_LINK = 'https://–≤–∞—à_–±–æ–Ω—É—Å_–∏–ª–∏_—Ñ–∞–π–ª'

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer(
        "üéÅ –•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫?\n\n"
        "1. –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: @poryadindom\n"
        "2. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∫—É—Å–Ω—è—à–∫—É!",
        reply_markup=types.InlineKeyboardMarkup().add(
            types.InlineKeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_sub")
        )
    )

@dp.callback_query_handler(lambda c: c.data == 'check_sub')
async def check_subscription(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    try:
        member = await bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        logging.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}, —Å—Ç–∞—Ç—É—Å: {member.status}")
        if member.status in ['member', 'administrator', 'creator']:
            await callback_query.message.answer(f"üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É, –ª–æ–≤–∏ –≤–∫—É—Å–Ω—è—à–∫—É): {BONUS_LINK}")
        else:
            await callback_query.message.answer("‚ùå –•–∞–ª—Ç—É—Ä–∏—Ç—å –Ω–µ –Ω–∞–¥–æ, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        await callback_query.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    await callback_query.answer()

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
